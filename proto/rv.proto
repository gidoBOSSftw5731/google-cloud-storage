//
// Proto Definition for RV data collection/archive.

syntax = "proto3";
package rv.proto;

option go_package = "github.com/routeviews/google-cloud-storage/proto/rv";

// RV Service definition.
service RV {
  // FileUpload accepts a single file upload request and
  // returns a status message to the caller.
  rpc FileUpload(FileRequest) returns (FileResponse);
}

message FileRequest {
  // Project is the sender to the system.
  enum Project {
    UNKNOWN = 0;
    ROUTEVIEWS = 1;
    ROUTEVIEWS_RIB = 4;
    RIPE_RIS = 2;
    RPKI_RARC = 3;
  }
  // The full path of the file from the rsync top directory, ie:
  // path: rsync://archive.routeviews.org/routeviews/bgpdata/2021.03/UPDATES/updates.20210331.2345.bz2
  //   is: routeviews/bgpdata/2021.03/UPDATES/updates.20210331.2345.bz2
  string filename = 1;
  // A md5sum of the file content.
  string md5sum = 2;
  // The actual file content, as bytes.
  bytes content = 3;
  // Whether or not to convert the file. Not all files uploaded should be converted.
  bool convert_sql = 4;
  // project is a list of senders of data to this storage system.
  // Each project may require different processing steps to accomplish the final stoarge goals.
  Project project = 5;
}

message FileResponse {
  enum Status {
    UNKNOWN = 0;
    SUCCESS = 1;
    FAIL    = 2;
  }
  // Return a simple status value success/fail.
  Status status = 1;
  // If the status is FAIL, provide an error string to be logged.
  string error_message = 2;
}
